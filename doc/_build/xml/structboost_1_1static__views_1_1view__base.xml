<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structboost_1_1static__views_1_1view__base" kind="struct" language="C++" prot="public">
    <compoundname>boost::static_views::view_base</compoundname>
    <derivedcompoundref refid="structboost_1_1static__views_1_1detail_1_1raw__view__impl" prot="public" virt="non-virtual">boost::static_views::detail::raw_view_impl&lt; Sequence, Extent &gt;</derivedcompoundref>
    <derivedcompoundref refid="structboost_1_1static__views_1_1view__adaptor__base" prot="public" virt="non-virtual">boost::static_views::view_adaptor_base&lt; Derived, Wrapper &gt;</derivedcompoundref>
    <derivedcompoundref refid="structboost_1_1static__views_1_1view__adaptor__base" prot="public" virt="non-virtual">boost::static_views::view_adaptor_base&lt; drop_impl&lt; Wrapper, Extent &gt;, Wrapper &gt;</derivedcompoundref>
    <derivedcompoundref refid="structboost_1_1static__views_1_1view__adaptor__base" prot="public" virt="non-virtual">boost::static_views::view_adaptor_base&lt; take_impl&lt; View, Extent &gt;, View &gt;</derivedcompoundref>
    <includes refid="view__base_8hpp" local="no">view_base.hpp</includes>
    <briefdescription>
<para>Base class for all the views. </para>    </briefdescription>
    <detaileddescription>
<para><verbatim>embed:rst:leading-slashes
/// By deriving from :cpp:class:`view_base`, you tell StaticView that
/// the derived class models the :ref:`view &lt;view-concept&gt;` concept.
/// </verbatim> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="127">
        <label>boost::static_views::view_adaptor_base&lt; Derived, Wrapper &gt;</label>
        <link refid="structboost_1_1static__views_1_1view__adaptor__base"/>
        <childnode refid="125" relation="public-inheritance">
        </childnode>
      </node>
      <node id="128">
        <label>boost::static_views::view_adaptor_base&lt; drop_impl&lt; Wrapper, Extent &gt;, Wrapper &gt;</label>
        <link refid="structboost_1_1static__views_1_1view__adaptor__base"/>
        <childnode refid="125" relation="public-inheritance">
        </childnode>
      </node>
      <node id="126">
        <label>boost::static_views::detail::raw_view_impl&lt; Sequence, Extent &gt;</label>
        <link refid="structboost_1_1static__views_1_1detail_1_1raw__view__impl"/>
        <childnode refid="125" relation="public-inheritance">
        </childnode>
      </node>
      <node id="125">
        <label>boost::static_views::view_base</label>
        <link refid="structboost_1_1static__views_1_1view__base"/>
      </node>
      <node id="129">
        <label>boost::static_views::detail::drop_impl&lt; Wrapper, Extent &gt;</label>
        <link refid="structboost_1_1static__views_1_1detail_1_1drop__impl"/>
        <childnode refid="128" relation="public-inheritance">
        </childnode>
      </node>
      <node id="131">
        <label>boost::static_views::detail::take_impl&lt; View, Extent &gt;</label>
        <link refid="structboost_1_1static__views_1_1detail_1_1take__impl"/>
        <childnode refid="130" relation="public-inheritance">
        </childnode>
      </node>
      <node id="130">
        <label>boost::static_views::view_adaptor_base&lt; take_impl&lt; View, Extent &gt;, View &gt;</label>
        <link refid="structboost_1_1static__views_1_1view__adaptor__base"/>
        <childnode refid="125" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/view_base.hpp" line="29" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/view_base.hpp" bodystart="29" bodyend="30"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
