<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="errors_8hpp" kind="file">
    <compoundname>errors.hpp</compoundname>
    <includes local="no">exception</includes>
    <includes local="no">boost/config.hpp</includes>
    <includes refid="config_8hpp" local="no">boost/static_views/detail/config.hpp</includes>
    <includedby refid="drop_8hpp" local="no">/home/tom/GSoC2017/static-views/include/boost/static_views/drop.hpp</includedby>
    <includedby refid="raw__view_8hpp" local="no">/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp</includedby>
    <includedby refid="take_8hpp" local="no">/home/tom/GSoC2017/static-views/include/boost/static_views/take.hpp</includedby>
    <incdepgraph>
      <node id="395">
        <label>exception</label>
      </node>
      <node id="397">
        <label>boost/static_views/detail/config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
      </node>
      <node id="394">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/errors.hpp</label>
        <link refid="errors.hpp"/>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
      <node id="398">
        <label>iostream</label>
      </node>
      <node id="396">
        <label>boost/config.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="401">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/slice.hpp</label>
        <link refid="slice_8hpp"/>
        <childnode refid="402" relation="include">
        </childnode>
      </node>
      <node id="402">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/hashed.hpp</label>
        <link refid="hashed_8hpp"/>
      </node>
      <node id="399">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/errors.hpp</label>
        <link refid="errors.hpp"/>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="404" relation="include">
        </childnode>
      </node>
      <node id="404">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/take.hpp</label>
        <link refid="take_8hpp"/>
        <childnode refid="401" relation="include">
        </childnode>
      </node>
      <node id="403">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/raw_view.hpp</label>
        <link refid="raw__view_8hpp"/>
      </node>
      <node id="400">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/drop.hpp</label>
        <link refid="drop_8hpp"/>
        <childnode refid="401" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classout__of__bound" prot="public">out_of_bound</innerclass>
    <innerclass refid="classinvalid__range" prot="public">invalid_range</innerclass>
    <innerclass refid="classfull__bucket" prot="public">full_bucket</innerclass>
    <innernamespace refid="namespacedetail">detail</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="errors_8hpp_1a05f87fd606831e7819012e6001166d0d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* make_out_of_bound_error)(char const *)</definition>
        <argsstring>)(char const *)</argsstring>
        <name>make_out_of_bound_error</name>
        <initializer>= &amp;<ref refid="namespacedetail_1ab4598d5c350d905b44cbe2177cf29416" kindref="member">detail::make_out_of_bound</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/errors.hpp" line="70" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/errors.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="errors_8hpp_1ac85be4d57e7f52b5dbcfe04fbc81258c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* make_invalid_range_error)(char const *)</definition>
        <argsstring>)(char const *)</argsstring>
        <name>make_invalid_range_error</name>
        <initializer>= &amp;<ref refid="namespacedetail_1abaaeea109f6345d9d41e1acc0e6ab896" kindref="member">detail::make_invalid_range</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/errors.hpp" line="71" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/errors.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="errors_8hpp_1a4615c2225e3815c9028f3fc02c41df59" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* make_full_bucket_error)(char const *)</definition>
        <argsstring>)(char const *)</argsstring>
        <name>make_full_bucket_error</name>
        <initializer>= &amp;<ref refid="namespacedetail_1abdaeb39c906d06f782d9d9df8b062c39" kindref="member">detail::make_full_bucket</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/errors.hpp" line="72" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/errors.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Tom<sp/>Westerhout<sp/>2017.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_STATIC_VIEWS_ERRORS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_STATIC_VIEWS_ERRORS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="config_8hpp" kindref="compound">boost/static_views/detail/config.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="config_8hpp_1af7a5d18b85d6b56f84277cd2708ca7b0" kindref="member">BOOST_STATIC_VIEWS_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classout__of__bound" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classout__of__bound" kindref="compound">out_of_bound</ref><sp/>:<sp/>std::exception<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>_msg;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21" refid="classout__of__bound_1a049b6a2418d7a4edc2b7c7d09209e2b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classout__of__bound_1a049b6a2418d7a4edc2b7c7d09209e2b3" kindref="member">out_of_bound</ref>()<sp/>noexcept<sp/>:<sp/>_msg{<sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>out<sp/>of<sp/>bounds.&quot;</highlight><highlight class="normal"><sp/>}<sp/>{}</highlight></codeline>
<codeline lineno="22" refid="classout__of__bound_1acf332567773de6aef383d73bcf96fea8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classout__of__bound_1acf332567773de6aef383d73bcf96fea8" kindref="member">out_of_bound</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>msg)<sp/>noexcept<sp/>:<sp/>_msg{<sp/>msg<sp/>}<sp/>{}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classout__of__bound_1a4ea147b1308d9060249d266420877c5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classout__of__bound_1a4ea147b1308d9060249d266420877c5d" kindref="member">what</ref>()<sp/>const<sp/>noexcept<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>const*</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="25"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_msg;<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classinvalid__range" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classinvalid__range" kindref="compound">invalid_range</ref><sp/>:<sp/>std::exception<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>_msg;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classinvalid__range_1a2ff17c5b405c3f8101d2a9cf72fecbab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinvalid__range_1a2ff17c5b405c3f8101d2a9cf72fecbab" kindref="member">invalid_range</ref>()<sp/>noexcept<sp/>:<sp/>_msg{<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>range<sp/>bounds.&quot;</highlight><highlight class="normal"><sp/>}<sp/>{}</highlight></codeline>
<codeline lineno="33" refid="classinvalid__range_1aa26bed9ad6f1dca2bdd4d18008a43eda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinvalid__range_1aa26bed9ad6f1dca2bdd4d18008a43eda" kindref="member">invalid_range</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>msg)<sp/>noexcept<sp/>:<sp/>_msg{<sp/>msg<sp/>}<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classinvalid__range_1abe025d3f4170bd6fa3ee43f8e913fa75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classinvalid__range_1abe025d3f4170bd6fa3ee43f8e913fa75" kindref="member">what</ref>()<sp/>const<sp/>noexcept<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>const*</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="36"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_msg;<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classfull__bucket" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfull__bucket" kindref="compound">full_bucket</ref><sp/>:<sp/>std::exception<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>_msg;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="classfull__bucket_1a7d5c6cb9248ae12a3e6f17e203b9fe69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfull__bucket_1a7d5c6cb9248ae12a3e6f17e203b9fe69" kindref="member">full_bucket</ref>()<sp/>noexcept<sp/>:<sp/>_msg{<sp/></highlight><highlight class="stringliteral">&quot;Bucket<sp/>is<sp/>full.&quot;</highlight><highlight class="normal"><sp/>}<sp/>{}</highlight></codeline>
<codeline lineno="43" refid="classfull__bucket_1ac8139700e83324671a73ee9f1cf352c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfull__bucket_1ac8139700e83324671a73ee9f1cf352c9" kindref="member">full_bucket</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>msg)<sp/>noexcept<sp/>:<sp/>_msg{<sp/>msg<sp/>}<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classfull__bucket_1a7db4f7147b91ccbf745a5cd4012232c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classfull__bucket_1a7db4f7147b91ccbf745a5cd4012232c2" kindref="member">what</ref>()<sp/>const<sp/>noexcept<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>const*</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="46"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_msg;<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_NORETURN<sp/></highlight></codeline>
<codeline lineno="52" refid="namespacedetail_1ab4598d5c350d905b44cbe2177cf29416" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacedetail_1ab4598d5c350d905b44cbe2177cf29416" kindref="member">make_out_of_bound</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>msg)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classout__of__bound" kindref="compound">out_of_bound</ref>{msg};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_NORETURN<sp/></highlight></codeline>
<codeline lineno="58" refid="namespacedetail_1abaaeea109f6345d9d41e1acc0e6ab896" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacedetail_1abaaeea109f6345d9d41e1acc0e6ab896" kindref="member">make_invalid_range</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>msg)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classinvalid__range" kindref="compound">invalid_range</ref>{msg};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_NORETURN<sp/></highlight></codeline>
<codeline lineno="64" refid="namespacedetail_1abdaeb39c906d06f782d9d9df8b062c39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacedetail_1abdaeb39c906d06f782d9d9df8b062c39" kindref="member">make_full_bucket</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>msg)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classfull__bucket" kindref="compound">full_bucket</ref>{msg};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="errors_8hpp_1a05f87fd606831e7819012e6001166d0d" refkind="member"><highlight class="normal">void<sp/>(*<ref refid="errors_8hpp_1a05f87fd606831e7819012e6001166d0d" kindref="member">make_out_of_bound_error</ref>)(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*)<sp/><sp/>=<sp/>&amp;<ref refid="namespacedetail_1ab4598d5c350d905b44cbe2177cf29416" kindref="member">detail::make_out_of_bound</ref>;</highlight></codeline>
<codeline lineno="71" refid="errors_8hpp_1ac85be4d57e7f52b5dbcfe04fbc81258c" refkind="member"><highlight class="normal">void<sp/>(*<ref refid="errors_8hpp_1ac85be4d57e7f52b5dbcfe04fbc81258c" kindref="member">make_invalid_range_error</ref>)(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*)<sp/>=<sp/>&amp;<ref refid="namespacedetail_1abaaeea109f6345d9d41e1acc0e6ab896" kindref="member">detail::make_invalid_range</ref>;</highlight></codeline>
<codeline lineno="72" refid="errors_8hpp_1a4615c2225e3815c9028f3fc02c41df59" refkind="member"><highlight class="normal">void<sp/>(*<ref refid="errors_8hpp_1a4615c2225e3815c9028f3fc02c41df59" kindref="member">make_full_bucket_error</ref>)(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*)<sp/>=<sp/>&amp;<ref refid="namespacedetail_1abdaeb39c906d06f782d9d9df8b062c39" kindref="member">detail::make_full_bucket</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="config_8hpp_1a9104b5e36c2866e678338780d2885a02" kindref="member">BOOST_STATIC_VIEWS_END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>BOOST_STATIC_VIEWS_ERRORS_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/errors.hpp"/>
  </compounddef>
</doxygen>
