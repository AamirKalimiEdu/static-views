<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structsequence__traits__default" kind="struct" language="C++" prot="public">
    <compoundname>sequence_traits_default</compoundname>
    <includes refid="sequence__traits_8hpp" local="no">sequence_traits.hpp</includes>
    <innerclass refid="structsequence__traits__default_1_1Impl" prot="private">sequence_traits_default::Impl</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Derived</declname>
        <defname>Derived</defname>
      </param>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structsequence__traits__default_1a439a2d6a6544a3bf54fd1af6680c28c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Dummy</type>
            <defval>void</defval>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;            <ref refid="structconcepts_1_1and__" kindref="compound">concepts::and_</ref>&lt;typename Impl&lt;Dummy&gt;::HasExtent,                typename Impl&lt;Dummy&gt;::ExtentIsNonNegative&gt;::                template test&lt;Derived&gt;()&gt;</defval>
          </param>
          <param>
            <type>class</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto sequence_traits_default&lt; Derived, T &gt;::size_impl</definition>
        <argsstring>(T const &amp;) noexcept -&gt; std::size_t</argsstring>
        <name>size_impl</name>
        <param>
          <type>T const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" line="341" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" bodystart="341" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="structsequence__traits__default_1a495e8251cc3dcaab8b9eddee2ccf4f69" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Dummy</type>
            <defval>void</defval>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;            !<ref refid="structconcepts_1_1and__" kindref="compound">concepts::and_</ref>&lt;typename Impl&lt;Dummy&gt;::HasExtent,                typename Impl&lt;Dummy&gt;::ExtentIsNonNegative&gt;::                template test&lt;Derived&gt;()            &amp;&amp; Impl&lt;Dummy&gt;::HasSize::template test&lt;T&gt;()&gt;</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto sequence_traits_default&lt; Derived, T &gt;::size_impl</definition>
        <argsstring>(T const &amp;xs) noexcept -&gt; std::size_t</argsstring>
        <name>size_impl</name>
        <param>
          <type>T const &amp;</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" line="360" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" bodystart="360" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="structsequence__traits__default_1a84de9e14b5af8217afe41622fc68891c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class S</type>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;std::is_same&lt;T,            std::remove_cv_t&lt;std::remove_reference_t&lt;S&gt;&gt;&gt;::value&gt;</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto sequence_traits_default&lt; Derived, T &gt;::at</definition>
        <argsstring>(S &amp;&amp;xs, std::size_t i) noexcept -&gt; decltype(std::forward&lt; S &gt;(xs)[i])</argsstring>
        <name>at</name>
        <param>
          <type>S &amp;&amp;</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" line="376" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" bodystart="376" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="structsequence__traits__default_1a2ce44df9100b9762b2631b489211687d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Dummy</type>
            <defval>void</defval>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;Impl&lt;Dummy&gt;::HasSizeImpl::                template test&lt;<ref refid="structsequence__traits__default" kindref="compound">sequence_traits_default</ref>&gt;()&gt;</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto sequence_traits_default&lt; Derived, T &gt;::size</definition>
        <argsstring>(T const &amp;xs) noexcept</argsstring>
        <name>size</name>
        <param>
          <type>T const &amp;</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" line="388" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="structsequence__traits__default_1aadcfb3a2ebea187f57b63d722f5a34d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto sequence_traits_default&lt; Derived, T &gt;::extent</definition>
        <argsstring>() noexcept -&gt; std::ptrdiff_t</argsstring>
        <name>extent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" line="393" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" bodystart="393" bodyend="396"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" line="285" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" bodystart="285" bodyend="397"/>
    <listofallmembers>
      <member refid="structsequence__traits__default_1a84de9e14b5af8217afe41622fc68891c" prot="public" virt="non-virtual"><scope>sequence_traits_default</scope><name>at</name></member>
      <member refid="structsequence__traits__default_1aadcfb3a2ebea187f57b63d722f5a34d6" prot="public" virt="non-virtual"><scope>sequence_traits_default</scope><name>extent</name></member>
      <member refid="structsequence__traits__default_1a2ce44df9100b9762b2631b489211687d" prot="public" virt="non-virtual"><scope>sequence_traits_default</scope><name>size</name></member>
      <member refid="structsequence__traits__default_1a439a2d6a6544a3bf54fd1af6680c28c0" prot="public" virt="non-virtual"><scope>sequence_traits_default</scope><name>size_impl</name></member>
      <member refid="structsequence__traits__default_1a495e8251cc3dcaab8b9eddee2ccf4f69" prot="public" virt="non-virtual"><scope>sequence_traits_default</scope><name>size_impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
