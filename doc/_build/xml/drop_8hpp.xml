<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="drop_8hpp" kind="file">
    <compoundname>drop.hpp</compoundname>
    <includes local="no">type_traits</includes>
    <includes local="no">boost/config.hpp</includes>
    <includes refid="config_8hpp" local="no">boost/static_views/detail/config.hpp</includes>
    <includes refid="utils_8hpp" local="no">boost/static_views/detail/utils.hpp</includes>
    <includes refid="errors_8hpp" local="no">boost/static_views/errors.hpp</includes>
    <includes refid="view__base_8hpp" local="no">boost/static_views/view_base.hpp</includes>
    <includes refid="algorithm__base_8hpp" local="no">boost/static_views/algorithm_base.hpp</includes>
    <includedby refid="slice_8hpp" local="no">/home/tom/GSoC2017/static-views/include/boost/static_views/slice.hpp</includedby>
    <incdepgraph>
      <node id="381">
        <label>boost/static_views/detail/utils.hpp</label>
        <link refid="utils_8hpp"/>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
      </node>
      <node id="390">
        <label>boost/static_views/detail/invoke.hpp</label>
        <link refid="invoke_8hpp"/>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
      </node>
      <node id="389">
        <label>boost/detail/workaround.hpp</label>
      </node>
      <node id="379">
        <label>exception</label>
      </node>
      <node id="378">
        <label>boost/static_views/detail/config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
      </node>
      <node id="382">
        <label>boost/static_views/errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
      </node>
      <node id="388">
        <label>boost/static_views/detail/wrapper.hpp</label>
        <link refid="wrapper_8hpp"/>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
      </node>
      <node id="386">
        <label>tuple</label>
      </node>
      <node id="383">
        <label>boost/static_views/view_base.hpp</label>
        <link refid="view__base_8hpp"/>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
      </node>
      <node id="387">
        <label>utility</label>
      </node>
      <node id="384">
        <label>boost/core/demangle.hpp</label>
      </node>
      <node id="380">
        <label>iostream</label>
      </node>
      <node id="377">
        <label>boost/config.hpp</label>
      </node>
      <node id="376">
        <label>type_traits</label>
      </node>
      <node id="385">
        <label>boost/static_views/algorithm_base.hpp</label>
        <link refid="algorithm__base_8hpp"/>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
      </node>
      <node id="375">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/drop.hpp</label>
        <link refid="drop.hpp"/>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="392">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/slice.hpp</label>
        <link refid="slice_8hpp"/>
        <childnode refid="393" relation="include">
        </childnode>
      </node>
      <node id="393">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/hashed.hpp</label>
        <link refid="hashed_8hpp"/>
      </node>
      <node id="391">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/drop.hpp</label>
        <link refid="drop.hpp"/>
        <childnode refid="392" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structdetail_1_1drop__impl" prot="public">detail::drop_impl</innerclass>
    <innerclass refid="structdetail_1_1make__drop__impl" prot="public">detail::make_drop_impl</innerclass>
    <innernamespace refid="namespacedetail">detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Tom<sp/>Westerhout<sp/>2017.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_STATIC_VIEWS_DROP_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_STATIC_VIEWS_DROP_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="config_8hpp" kindref="compound">boost/static_views/detail/config.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="utils_8hpp" kindref="compound">boost/static_views/detail/utils.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="errors_8hpp" kindref="compound">boost/static_views/errors.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="view__base_8hpp" kindref="compound">boost/static_views/view_base.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="algorithm__base_8hpp" kindref="compound">boost/static_views/algorithm_base.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="config_8hpp_1af7a5d18b85d6b56f84277cd2708ca7b0" kindref="member">BOOST_STATIC_VIEWS_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View&gt;</highlight></codeline>
<codeline lineno="25" refid="structdetail_1_1drop__impl" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1drop__impl" kindref="compound">drop_impl</ref><sp/>:<sp/><ref refid="structview__adaptor__base" kindref="compound">view_adaptor_base</ref>&lt;drop_impl&lt;View&gt;,<sp/>View&gt;<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structdetail_1_1drop__impl_1a8d910b71e11d48d8f2dbde147b035ef0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref><sp/><ref refid="structdetail_1_1drop__impl_1a8d910b71e11d48d8f2dbde147b035ef0" kindref="member">drop_impl</ref>(View&amp;&amp;<sp/>xs,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a349172823115c7f0b15ed9861e97bd59" kindref="member">BOOST_STATIC_VIEWS_NOEXCEPT_IF</ref>(<ref refid="namespacedetail_1_1utils_1adb3f52296e671c0cc215b9d6d30e4d10" kindref="member">utils::all</ref>(</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_nothrow_constructible&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structview__adaptor__base" kindref="compound">drop_impl::view_adaptor_base_type</ref>,<sp/>View&amp;&amp;&gt;::value,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept(std::min(std::declval&lt;std::size_t&gt;(),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::declval&lt;std::size_t&gt;())),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop_impl::is_noexcept_parent_size()</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structdetail_1_1drop__impl" kindref="compound">drop_impl</ref>::<ref refid="structview__adaptor__base" kindref="compound">view_adaptor_base_type</ref>{<sp/>std::move(xs)<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_b{<sp/>std::min(this-&gt;<ref refid="structview__adaptor__base_1ac6d0e2b2daeccf0562c59bfb23f35b6d" kindref="member">parent</ref>().<ref refid="structdetail_1_1drop__impl_1a3d5ca28dea6acea1dbb52918a7e83b1a" kindref="member">size</ref>(),<sp/>b)<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structdetail_1_1drop__impl_1a3d5ca28dea6acea1dbb52918a7e83b1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1drop__impl_1a3d5ca28dea6acea1dbb52918a7e83b1a" kindref="member">size</ref>()<sp/>const<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a349172823115c7f0b15ed9861e97bd59" kindref="member">BOOST_STATIC_VIEWS_NOEXCEPT_IF</ref>(<ref refid="structdetail_1_1drop__impl" kindref="compound">drop_impl</ref>::is_noexcept_parent_size())</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="structview__adaptor__base_1ac6d0e2b2daeccf0562c59bfb23f35b6d" kindref="member">parent</ref>().size()<sp/>-<sp/>_b;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FORCEINLINE</highlight></codeline>
<codeline lineno="48" refid="structdetail_1_1drop__impl_1af2c2b01c070b96a5ccb88f141c0a5d0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1drop__impl_1af2c2b01c070b96a5ccb88f141c0a5d0f" kindref="member">map</ref>(std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="49"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/><ref refid="structdetail_1_1drop__impl_1a3d5ca28dea6acea1dbb52918a7e83b1a" kindref="member">size</ref>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(_b<sp/>+<sp/>i)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<ref refid="errors_8hpp_1a05f87fd606831e7819012e6001166d0d" kindref="member">make_out_of_bound_error</ref>(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;`i<sp/>&lt;<sp/>size()`<sp/>not<sp/>satisfied.&quot;</highlight><highlight class="normal">),<sp/>_b<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57" refid="structdetail_1_1drop__impl_1a15e6389c0e5f7593c838dee2a02e25b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1drop__impl_1a15e6389c0e5f7593c838dee2a02e25b9" kindref="member">BOOST_STATIC_VIEWS_NAMESPACE::view_adaptor_core_access</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>_b;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_noexcept_parent_size()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>noexcept(std::declval&lt;drop_impl<sp/>const&amp;&gt;().<ref refid="structview__adaptor__base_1ac6d0e2b2daeccf0562c59bfb23f35b6d" kindref="member">parent</ref>().<ref refid="structdetail_1_1drop__impl_1a3d5ca28dea6acea1dbb52918a7e83b1a" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="structdetail_1_1make__drop__impl" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__drop__impl" kindref="compound">make_drop_impl</ref><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref></highlight></codeline>
<codeline lineno="69" refid="structdetail_1_1make__drop__impl_1ae2568547928070b57da16d54335a4d6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1make__drop__impl_1ae2568547928070b57da16d54335a4d6f" kindref="member">operator()</ref>(View&amp;&amp;<sp/>xs,<sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a1f88e23c120428275a96beec18c0fbee" kindref="member">BOOST_STATIC_VIEWS_AUTO_RETURN_NOEXCEPT</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1drop__impl" kindref="compound">drop_impl</ref>&lt;std::decay_t&lt;View&gt;&gt;{std::forward&lt;View&gt;(xs),<sp/>b}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="algorithm__base_8hpp_1a45235289b595362bcfd9fd531b4ffd25" kindref="member">BOOST_STATIC_VIEWS_INLINE_ALGO_VARIABLE</ref>(<ref refid="structdetail_1_1make__drop__impl" kindref="compound">detail::make_drop_impl</ref>,<sp/>drop)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="config_8hpp_1a9104b5e36c2866e678338780d2885a02" kindref="member">BOOST_STATIC_VIEWS_END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>BOOST_STATIC_VIEWS_DROP_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/drop.hpp"/>
  </compounddef>
</doxygen>
