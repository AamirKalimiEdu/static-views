<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="slice_8hpp" kind="file" language="C++">
    <compoundname>slice.hpp</compoundname>
    <includes refid="config_8hpp" local="yes">detail/config.hpp</includes>
    <includes refid="drop_8hpp" local="yes">drop.hpp</includes>
    <includes refid="take_8hpp" local="yes">take.hpp</includes>
    <includes local="no">type_traits</includes>
    <incdepgraph>
      <node id="94">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp</label>
      </node>
      <node id="102">
        <label>limits</label>
      </node>
      <node id="89">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/slice.hpp</label>
        <link refid="slice_8hpp"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>view_base.hpp</label>
      </node>
      <node id="91">
        <label>cassert</label>
      </node>
      <node id="100">
        <label>sequence_traits.hpp</label>
        <link refid="sequence__traits_8hpp"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>detail/config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/detail/wrapper.hpp</label>
      </node>
      <node id="93">
        <label>algorithm_base.hpp</label>
      </node>
      <node id="97">
        <label>tuple</label>
      </node>
      <node id="105">
        <label>take.hpp</label>
        <link refid="take_8hpp"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>/home/tom/GSoC2017/static-views/include/boost/static_views/view_base.hpp</label>
      </node>
      <node id="99">
        <label>utility</label>
      </node>
      <node id="101">
        <label>array</label>
      </node>
      <node id="98">
        <label>type_traits</label>
      </node>
      <node id="104">
        <label>algorithm</label>
      </node>
      <node id="92">
        <label>drop.hpp</label>
        <link refid="drop_8hpp"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structdetail_1_1slice__impl" prot="public">detail::slice_impl</innerclass>
    <innerclass refid="structdetail_1_1make__slice__impl" prot="public">detail::make_slice_impl</innerclass>
    <innerclass refid="structdetail_1_1make__slice__algo__impl" prot="public">detail::make_slice_algo_impl</innerclass>
    <innernamespace refid="namespacedetail">detail</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="slice_8hpp_1a18968c488a8b0cdc2697296024da9293" prot="public" static="no" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto slice</definition>
        <argsstring></argsstring>
        <name>slice</name>
        <initializer>= implementation detail</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-slashes
/// :math:`\mathtt{slice} : \mathbb{N} \times \mathbb{N} \to \text{View} \to
/// \text{View}` is a functor that let&apos;s you create slices of views.
/// Given a index :math:`b \in \mathbb{N}`, an index :math:`e \in
/// \mathbb{N}` and a :ref:`view
/// &lt;view-concept&gt;` :math:`xs`, creates a view of elements of :math:`xs` with
/// indices :math:`i \in \mathbb{N} \cap [b, e)`.
/// </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/slice.hpp" line="143" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/slice.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Tom<sp/>Westerhout<sp/>2017.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_STATIC_VIEWS_SLICE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_STATIC_VIEWS_SLICE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8hpp" kindref="compound">detail/config.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drop_8hpp" kindref="compound">drop.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="take_8hpp" kindref="compound">take.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="config_8hpp_1af7a5d18b85d6b56f84277cd2708ca7b0" kindref="member">BOOST_STATIC_VIEWS_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DropTake&gt;</highlight></codeline>
<codeline lineno="19" refid="structdetail_1_1slice__impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1slice__impl" kindref="compound">slice_impl</ref><sp/>:<sp/>DropTake<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">View,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>clashes<sp/>with<sp/>copy/move<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">=<sp/>std::enable_if_t&lt;!std::is_same&lt;std::decay_t&lt;View&gt;,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1slice__impl" kindref="compound">slice_impl&lt;DropTake&gt;</ref>&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="46" refid="structdetail_1_1slice__impl_1a8beab2a5e9f5193211267075e6d84a85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref><sp/><ref refid="structdetail_1_1slice__impl_1a8beab2a5e9f5193211267075e6d84a85" kindref="member">slice_impl</ref>(View&amp;&amp;<sp/>xs)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a349172823115c7f0b15ed9861e97bd59" kindref="member">BOOST_STATIC_VIEWS_NOEXCEPT_IF</ref>(</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_nothrow_constructible&lt;DropTake,<sp/>View&amp;&amp;&gt;::value)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>DropTake{std::forward&lt;View&gt;(xs)}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_STATIC_VIEWS_FORCEINLINE</highlight></codeline>
<codeline lineno="68" refid="structdetail_1_1slice__impl_1a18cde5cb05290751a3f2852152bd81a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1slice__impl_1a18cde5cb05290751a3f2852152bd81a2" kindref="member">map</ref>(std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept(std::declval&lt;DropTake<sp/>const&amp;&gt;().<ref refid="structdetail_1_1slice__impl_1a786bd7709dbd87c98e2f476aefb13696" kindref="member">parent</ref>()),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a40160aa8f77c07867b6919a9a2e069cb" kindref="member">BOOST_STATIC_VIEWS_BUG_MESSAGE</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(noexcept(std::declval&lt;DropTake<sp/>const&amp;&gt;().<ref refid="structdetail_1_1slice__impl_1a18cde5cb05290751a3f2852152bd81a2" kindref="member">map</ref>(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::declval&lt;std::size_t&gt;())),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a40160aa8f77c07867b6919a9a2e069cb" kindref="member">BOOST_STATIC_VIEWS_BUG_MESSAGE</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept(std::declval&lt;DropTake<sp/>const&amp;&gt;().<ref refid="structdetail_1_1slice__impl_1a786bd7709dbd87c98e2f476aefb13696" kindref="member">parent</ref>().<ref refid="structdetail_1_1slice__impl_1a18cde5cb05290751a3f2852152bd81a2" kindref="member">map</ref>(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::declval&lt;std::size_t&gt;())),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a40160aa8f77c07867b6919a9a2e069cb" kindref="member">BOOST_STATIC_VIEWS_BUG_MESSAGE</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DropTake<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;parent().map(p-&gt;map(i));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref></highlight></codeline>
<codeline lineno="93" refid="structdetail_1_1slice__impl_1a786bd7709dbd87c98e2f476aefb13696" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a516d82020cac114defa81888051e4c11" kindref="member">BOOST_STATIC_VIEWS_DECLTYPE_AUTO</ref><sp/><ref refid="structdetail_1_1slice__impl_1a786bd7709dbd87c98e2f476aefb13696" kindref="member">parent</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::declval&lt;DropTake<sp/>const&amp;&gt;().<ref refid="structdetail_1_1slice__impl_1a786bd7709dbd87c98e2f476aefb13696" kindref="member">parent</ref>().<ref refid="structdetail_1_1slice__impl_1a786bd7709dbd87c98e2f476aefb13696" kindref="member">parent</ref>()),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a40160aa8f77c07867b6919a9a2e069cb" kindref="member">BOOST_STATIC_VIEWS_BUG_MESSAGE</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DropTake<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;<ref refid="structdetail_1_1slice__impl_1a786bd7709dbd87c98e2f476aefb13696" kindref="member">parent</ref>().parent();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structdetail_1_1make__slice__impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__slice__impl" kindref="compound">make_slice_impl</ref><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_STATIC_VIEWS_FORCEINLINE</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref></highlight></codeline>
<codeline lineno="108" refid="structdetail_1_1make__slice__impl_1a23a372fecf706765390eb6f5625fbb63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1make__slice__impl_1a23a372fecf706765390eb6f5625fbb63" kindref="member">operator()</ref>(View&amp;&amp;<sp/>xs,<sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>b,<sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>e)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1afdad3aa7242c15e4312624c4096b5888" kindref="member">BOOST_STATIC_VIEWS_DECLTYPE_NOEXCEPT_RETURN</ref></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1slice__impl" kindref="compound">slice_impl</ref>&lt;std::decay_t&lt;decltype(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="drop_8hpp_1a279d671006ab8e9b6be8b10c07890d6d" kindref="member">drop_exactly</ref>(b)(<ref refid="take_8hpp_1ae1d440b34c38c79b8651e6b50aa41f90" kindref="member">take_exactly</ref>(e)(std::forward&lt;View&gt;(xs).</highlight><highlight class="keyword">get</highlight><highlight class="normal">())))&gt;&gt;{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="drop_8hpp_1a279d671006ab8e9b6be8b10c07890d6d" kindref="member">drop_exactly</ref>(b)(<ref refid="take_8hpp_1ae1d440b34c38c79b8651e6b50aa41f90" kindref="member">take_exactly</ref>(e)(std::forward&lt;View&gt;(xs).</highlight><highlight class="keyword">get</highlight><highlight class="normal">()))}</highlight></codeline>
<codeline lineno="114" refid="structdetail_1_1make__slice__impl_1a7b50b17e5ce67296b4b30d6b734766e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="structdetail_1_1make__slice__algo__impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__slice__algo__impl" kindref="compound">make_slice_algo_impl</ref><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_STATIC_VIEWS_FORCEINLINE</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a8e482408924d39139b1f23bf8a286544" kindref="member">BOOST_STATIC_VIEWS_CONSTEXPR</ref></highlight></codeline>
<codeline lineno="122" refid="structdetail_1_1make__slice__algo__impl_1a8512f6611f07219f25bd50f10e0e60c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1make__slice__algo__impl_1a8512f6611f07219f25bd50f10e0e60c6" kindref="member">operator()</ref>(std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>b,<sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>e)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1afdad3aa7242c15e4312624c4096b5888" kindref="member">BOOST_STATIC_VIEWS_DECLTYPE_NOEXCEPT_RETURN</ref></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algorithm(<ref refid="structdetail_1_1make__slice__impl" kindref="compound">make_slice_impl</ref>{},<sp/>std::size_t{b},<sp/>std::size_t{e})</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*algorithm_impl&lt;make_slice_impl,<sp/>std::size_t,<sp/>std::size_t&gt;(</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_slice_impl{},<sp/>b,<sp/>e)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="config_8hpp_1a01456e2757ca1ce16c463d9174b3af31" kindref="member">BOOST_STATIC_VIEWS_INLINE_VARIABLE</ref>(</highlight></codeline>
<codeline lineno="143" refid="slice_8hpp_1a18968c488a8b0cdc2697296024da9293" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1make__slice__algo__impl" kindref="compound">detail::make_slice_algo_impl</ref>,<sp/><ref refid="slice_8hpp_1a18968c488a8b0cdc2697296024da9293" kindref="member">slice</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="config_8hpp_1a9104b5e36c2866e678338780d2885a02" kindref="member">BOOST_STATIC_VIEWS_END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>BOOST_STATIC_VIEWS_SLICE_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/slice.hpp"/>
  </compounddef>
</doxygen>
