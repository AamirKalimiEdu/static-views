<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structboost_1_1static__views_1_1concepts_1_1sequence_1_1ExtentIsConstexpr" kind="struct" language="C++" prot="public">
    <compoundname>boost::static_views::concepts::sequence::ExtentIsConstexpr</compoundname>
    <includes refid="sequence__traits_8hpp" local="no">sequence_traits.hpp</includes>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structboost_1_1static__views_1_1concepts_1_1sequence_1_1ExtentIsConstexpr_1a3140bd228570978f945494ff8d13927c" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>int</type>
            <defval>(T::extent(), 0)</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto boost::static_views::concepts::sequence::ExtentIsConstexpr::test_impl</definition>
        <argsstring>(int) -&gt; std::true_type</argsstring>
        <name>test_impl</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" line="156" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1static__views_1_1concepts_1_1sequence_1_1ExtentIsConstexpr_1ab2585d9e4ac09b3cb418a45f8f3341e4" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto boost::static_views::concepts::sequence::ExtentIsConstexpr::test_impl</definition>
        <argsstring>(...) -&gt; std::false_type</argsstring>
        <name>test_impl</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" line="162" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" bodystart="162" bodyend="165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structboost_1_1static__views_1_1concepts_1_1sequence_1_1ExtentIsConstexpr_1a8664fc65905af235bca75c249c63bfea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto boost::static_views::concepts::sequence::ExtentIsConstexpr::test</definition>
        <argsstring>() noexcept -&gt; bool</argsstring>
        <name>test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" line="169" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1static__views_1_1concepts_1_1sequence_1_1ExtentIsConstexpr_1a013b26332cfff8768c55edb4587a9401" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto boost::static_views::concepts::sequence::ExtentIsConstexpr::check</definition>
        <argsstring>() noexcept -&gt; bool</argsstring>
        <name>check</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" line="175" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" bodystart="175" bodyend="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" line="153" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/sequence_traits.hpp" bodystart="153" bodyend="184"/>
    <listofallmembers>
      <member refid="structboost_1_1static__views_1_1concepts_1_1sequence_1_1ExtentIsConstexpr_1a013b26332cfff8768c55edb4587a9401" prot="public" virt="non-virtual"><scope>boost::static_views::concepts::sequence::ExtentIsConstexpr</scope><name>check</name></member>
      <member refid="structboost_1_1static__views_1_1concepts_1_1sequence_1_1ExtentIsConstexpr_1a8664fc65905af235bca75c249c63bfea" prot="public" virt="non-virtual"><scope>boost::static_views::concepts::sequence::ExtentIsConstexpr</scope><name>test</name></member>
      <member refid="structboost_1_1static__views_1_1concepts_1_1sequence_1_1ExtentIsConstexpr_1a3140bd228570978f945494ff8d13927c" prot="private" virt="non-virtual"><scope>boost::static_views::concepts::sequence::ExtentIsConstexpr</scope><name>test_impl</name></member>
      <member refid="structboost_1_1static__views_1_1concepts_1_1sequence_1_1ExtentIsConstexpr_1ab2585d9e4ac09b3cb418a45f8f3341e4" prot="private" virt="non-virtual"><scope>boost::static_views::concepts::sequence::ExtentIsConstexpr</scope><name>test_impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
