<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structview__adaptor__core__access" kind="struct" prot="public">
    <compoundname>view_adaptor_core_access</compoundname>
    <includes refid="view__base_8hpp" local="no">view_base.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structview__adaptor__core__access_1aa9a23e5ee27b4f7d859fc7b650783d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class V</type>
          </param>
        </templateparamlist>
        <type>friend struct</type>
        <definition>friend struct view_adaptor_base</definition>
        <argsstring></argsstring>
        <name>view_adaptor_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/view_base.hpp" line="60" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/view_base.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper class one can befriend to give StaticViews access to the private <computeroutput>map</computeroutput> function. </para>    </briefdescription>
    <detaileddescription>
<para>Defines a single private member function <programlisting><codeline><highlight class="normal">template<sp/>&lt;class<sp/>View&gt;</highlight></codeline>
<codeline><highlight class="normal">static<sp/>constexpr<sp/>auto<sp/>map(View<sp/>const&amp;<sp/>xs,<sp/>std::size_t<sp/>const<sp/>i)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>noexcept(<sp/>whenever<sp/>possible<sp/>);</highlight></codeline>
</programlisting> that calls <computeroutput>xs.map(i)</computeroutput>. By befriending this class, you give #boost::static_views::view_adaptor_base access to private <computeroutput>map</computeroutput> function, but nothing else. The very same technique is used in <ulink url="http://www.boost.org/doc/libs/1_64_0/libs/iterator/doc/iterator_facade.html#iterator-core-access">Boost.Iterator</ulink>. </para>    </detaileddescription>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/view_base.hpp" line="59" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/view_base.hpp" bodystart="59" bodyend="70"/>
    <listofallmembers>
      <member refid="structview__adaptor__core__access_1aa9a23e5ee27b4f7d859fc7b650783d60" prot="public" virt="non-virtual"><scope>view_adaptor_core_access</scope><name>view_adaptor_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
