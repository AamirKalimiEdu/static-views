<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structsequence__traits" kind="struct" prot="public">
    <compoundname>sequence_traits</compoundname>
    <includes refid="static__views_8hpp" local="no">static_views.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Sequence</type>
      </param>
    </templateparamlist>
    <briefdescription>
<para>Sequence <emphasis>type class</emphasis>. </para>    </briefdescription>
    <detaileddescription>
<para>This is a common interface through which sequences are accessed. To specialise it for some type, one needs to provide the following operations:<itemizedlist>
<listitem><para><computeroutput>static constexpr auto size() noexcept</computeroutput> <mdash/> returns the number of elements is the sequence.</para></listitem><listitem><para><computeroutput>template &lt;class S&gt; static constexpr decltype(auto) at(S&amp;&amp; xs, std::size_t i) noexcept</computeroutput>. I.e. given a sequence <computeroutput>xs</computeroutput>, return its <computeroutput>i</computeroutput>th element.</para></listitem></itemizedlist>
</para><para>Currently, two specialisations are provided: for C-style arrays and <computeroutput>std::array</computeroutput>. </para>    </detaileddescription>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/static_views.hpp" line="81" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/static_views.hpp" bodystart="81" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
