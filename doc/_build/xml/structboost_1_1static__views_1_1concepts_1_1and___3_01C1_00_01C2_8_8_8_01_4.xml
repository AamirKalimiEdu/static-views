<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4" kind="struct" language="C++" prot="public">
    <compoundname>boost::static_views::concepts::and_&lt; C1, C2... &gt;</compoundname>
    <includes refid="utils_8hpp" local="no">utils.hpp</includes>
    <templateparamlist>
      <param>
        <type>class C1</type>
      </param>
      <param>
        <type>class...</type>
        <declname>C2</declname>
        <defname>C2</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a81a9fe76b3371704cef7a69fe090bbb7" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;C1::template <ref refid="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a53d403faab918f06d30dc56c5bcda02d" kindref="member">test</ref>&lt;T&gt;()&gt;</defval>
          </param>
          <param>
            <type>class</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto boost::static_views::concepts::and_&lt; C1, C2... &gt;::test_impl</definition>
        <argsstring>() noexcept -&gt; bool</argsstring>
        <name>test_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" line="108" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a2a972b6a5921ea0f60abd64dcbef637c" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;!C1::template <ref refid="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a53d403faab918f06d30dc56c5bcda02d" kindref="member">test</ref>&lt;T&gt;()&gt;</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto boost::static_views::concepts::and_&lt; C1, C2... &gt;::test_impl</definition>
        <argsstring>() noexcept -&gt; bool</argsstring>
        <name>test_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" line="115" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a8133adb0d99b442fc9387e07d240ab2f" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;C1::template <ref refid="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a53d403faab918f06d30dc56c5bcda02d" kindref="member">test</ref>&lt;T&gt;()&gt;</defval>
          </param>
          <param>
            <type>class</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto boost::static_views::concepts::and_&lt; C1, C2... &gt;::check_impl</definition>
        <argsstring>() noexcept -&gt; bool</argsstring>
        <name>check_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" line="123" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1afc45f3e08e5d4d5061cb70e9bdfa52e5" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;!C1::template <ref refid="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a53d403faab918f06d30dc56c5bcda02d" kindref="member">test</ref>&lt;T&gt;()&gt;</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto boost::static_views::concepts::and_&lt; C1, C2... &gt;::check_impl</definition>
        <argsstring>() noexcept -&gt; bool</argsstring>
        <name>check_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" line="130" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" bodystart="130" bodyend="134"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a53d403faab918f06d30dc56c5bcda02d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto boost::static_views::concepts::and_&lt; C1, C2... &gt;::test</definition>
        <argsstring>() noexcept -&gt; bool</argsstring>
        <name>test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" line="138" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a439079d5b8565518d05536f321772f23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto boost::static_views::concepts::and_&lt; C1, C2... &gt;::check</definition>
        <argsstring>() noexcept -&gt; bool</argsstring>
        <name>check</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" line="144" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" bodystart="144" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" line="102" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/detail/utils.hpp" bodystart="102" bodyend="148"/>
    <listofallmembers>
      <member refid="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a439079d5b8565518d05536f321772f23" prot="public" virt="non-virtual"><scope>boost::static_views::concepts::and_&lt; C1, C2... &gt;</scope><name>check</name></member>
      <member refid="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a8133adb0d99b442fc9387e07d240ab2f" prot="private" virt="non-virtual"><scope>boost::static_views::concepts::and_&lt; C1, C2... &gt;</scope><name>check_impl</name></member>
      <member refid="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1afc45f3e08e5d4d5061cb70e9bdfa52e5" prot="private" virt="non-virtual"><scope>boost::static_views::concepts::and_&lt; C1, C2... &gt;</scope><name>check_impl</name></member>
      <member refid="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a53d403faab918f06d30dc56c5bcda02d" prot="public" virt="non-virtual"><scope>boost::static_views::concepts::and_&lt; C1, C2... &gt;</scope><name>test</name></member>
      <member refid="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a81a9fe76b3371704cef7a69fe090bbb7" prot="private" virt="non-virtual"><scope>boost::static_views::concepts::and_&lt; C1, C2... &gt;</scope><name>test_impl</name></member>
      <member refid="structboost_1_1static__views_1_1concepts_1_1and___3_01C1_00_01C2_8_8_8_01_4_1a2a972b6a5921ea0f60abd64dcbef637c" prot="private" virt="non-virtual"><scope>boost::static_views::concepts::and_&lt; C1, C2... &gt;</scope><name>test_impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
