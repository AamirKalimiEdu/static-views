<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structboost_1_1static__views_1_1concepts_1_1View" kind="struct" language="C++" prot="public">
    <compoundname>boost::static_views::concepts::View</compoundname>
    <includes refid="view__base_8hpp" local="no">view_base.hpp</includes>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>embed:rst:leading-slashes
/// Defines the View concept. Here&apos;s a synopsis:
///
/// .. code-block:: cpp
///
///   struct View {
///       template &lt;class T&gt;
///       static constexpr auto test() noexcept -&gt; bool;
///
///       template &lt;class T&gt;
///       static constexpr auto check() noexcept -&gt; bool;
///   };
///
/// ``test()`` returns whether the requirements are satisfied, while
/// ``check()`` *checks* that they are satisfied and triggers a
/// ``static_assert`` failure if they aren&apos;t.
/// </verbatim> </para>    </detaileddescription>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/view_base.hpp" line="288" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/view_base.hpp" bodystart="288" bodyend="289"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
