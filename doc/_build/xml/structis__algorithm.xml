<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structis__algorithm" kind="struct" prot="public">
    <compoundname>is_algorithm</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::is_base_of&lt; algorithm_base, V &gt;</basecompoundref>
    <includes refid="algorithm__base_8hpp" local="no">algorithm_base.hpp</includes>
    <templateparamlist>
      <param>
        <type>class V</type>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="66">
        <label>is_algorithm&lt; V &gt;</label>
        <link refid="structis__algorithm"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>std::is_base_of&lt; algorithm_base, V &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="68">
        <label>is_algorithm&lt; V &gt;</label>
        <link refid="structis__algorithm"/>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>std::is_base_of&lt; algorithm_base, V &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/tom/GSoC2017/static-views/include/boost/static_views/algorithm_base.hpp" line="28" column="1" bodyfile="/home/tom/GSoC2017/static-views/include/boost/static_views/algorithm_base.hpp" bodystart="28" bodyend="28"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
